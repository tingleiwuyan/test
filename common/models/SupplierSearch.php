<?php

namespace common\models;

use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use common\models\Supplier;

/**
 * SupplierSearch represents the model behind the search form about `common\models\Supplier`.
 */
class SupplierSearch extends Supplier
{
    public function attributes()
    {
        return array_merge(parent::attributes(),['adminuname']); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id', 'created_at', 'updated_at', 'status', 'admin_uid'], 'integer'],
            [['username', 'nickname', 'password_hash','adminuname'], 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = Supplier::find();

        // add conditions that should always apply here



        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // grid filtering conditions
        $query->andFilterWhere([
            'supplier.id' => $this->id,
            'supplier.created_at' => $this->created_at,
            'supplier.updated_at' => $this->updated_at,
            'supplier.status' => $this->status,
            'admin_uid' => $this->admin_uid,
        ]);

        $query->andFilterWhere(['like', 'username', $this->username])
            ->andFilterWhere(['like', 'nickname', $this->nickname])
            ->andFilterWhere(['like', 'password_hash', $this->password_hash]);
        $query->join('INNER JOIN','admin_user','supplier.admin_uid = admin_user.id');
       $query->andFilterWhere(['like','admin_user.nickname',$this->adminuname]);

        $dataProvider->sort->attributes['adminuname'] =
            [
                'asc'=>['adminU.nickname'=>SORT_ASC],
                'desc'=>['adminU.nickname'=>SORT_DESC],
            ];
       return $dataProvider;
    }
}
